/* [ct2cs 22/5/23 21:36]
 * This file was generated by Fahrenheit.CT2CS (https://github.com/fkelava/fahrenheit/).
 * 
 * Source file: x_plysave.ct
 */

namespace Fahrenheit.CoreLib;

[StructLayout(LayoutKind.Explicit, Pack = 4, Size = 0x94)]
public struct FhXPlySave 
{
    [FieldOffset(0x4)] public uint ply_base_hp;
    [FieldOffset(0x8)] public uint ply_base_mp;
    [FieldOffset(0xC)] public byte ply_base_str;
    [FieldOffset(0xD)] public byte ply_base_def;
    [FieldOffset(0xE)] public byte ply_base_mag;
    [FieldOffset(0xF)] public byte ply_base_mdef;
    [FieldOffset(0x10)] public byte ply_base_agi;
    [FieldOffset(0x11)] public byte ply_base_luck;
    [FieldOffset(0x12)] public byte ply_base_eva;
    [FieldOffset(0x13)] public byte ply_base_acc;
    [FieldOffset(0x14)] public ushort __0x14;
    [FieldOffset(0x16)] public ushort __0x16;
    [FieldOffset(0x18)] public uint ply_cur_ap;
    [FieldOffset(0x1C)] public uint ply_cur_hp;
    [FieldOffset(0x20)] public uint ply_cur_mp;
    [FieldOffset(0x24)] public uint ply_max_hp;
    [FieldOffset(0x28)] public uint ply_max_mp;
    [FieldOffset(0x2C)] public byte ply_flags;
    [FieldOffset(0x2D)] public byte ply_wpn_inv_index;
    [FieldOffset(0x2E)] public byte ply_arm_inv_index;
    [FieldOffset(0x2F)] public byte ply_str;
    [FieldOffset(0x30)] public byte ply_def;
    [FieldOffset(0x31)] public byte ply_mag;
    [FieldOffset(0x32)] public byte ply_mdef;
    [FieldOffset(0x33)] public byte ply_agi;
    [FieldOffset(0x34)] public byte ply_luck;
    [FieldOffset(0x35)] public byte ply_eva;
    [FieldOffset(0x36)] public byte ply_acc;
    [FieldOffset(0x37)] public byte ply_poison_dmg_pct;
    [FieldOffset(0x38)] public byte ply_ovr_mode_select;
    [FieldOffset(0x39)] public byte ply_ovr_charge_cur_pct;
    [FieldOffset(0x3A)] public byte ply_ovr_charge_max_pct;
    [FieldOffset(0x3B)] public byte ply_slv_available;
    [FieldOffset(0x3C)] public byte ply_slv_expended;
    [FieldOffset(0x3D)] public byte __0x3D;
    [FieldOffset(0x3E)] public byte __0x3E;
    public int ply_abi_attack { get { return (__0x3E) & 1; } }
    public int ply_abi_item { get { return (__0x3E >> 1) & 1; } }
    public int ply_abi_switch { get { return (__0x3E >> 2) & 1; } }
    public int ply_abi_escape { get { return (__0x3E >> 3) & 1; } }
    public int ply_abi_weapon { get { return (__0x3E >> 4) & 1; } }
    public int ply_abi_armor { get { return (__0x3E >> 5) & 1; } }
    public int ply_abi_delay_attack { get { return (__0x3E >> 6) & 1; } }
    public int ply_abi_delay_buster { get { return (__0x3E >> 7) & 1; } }
    [FieldOffset(0x3F)] public byte __0x3F;
    public int ply_abi_sleep_attack { get { return (__0x3F) & 1; } }
    public int ply_abi_silence_attack { get { return (__0x3F >> 1) & 1; } }
    public int ply_abi_dark_attack { get { return (__0x3F >> 2) & 1; } }
    public int ply_abi_zombie_attack { get { return (__0x3F >> 3) & 1; } }
    public int ply_abi_sleep_buster { get { return (__0x3F >> 4) & 1; } }
    public int ply_abi_silence_buster { get { return (__0x3F >> 5) & 1; } }
    public int ply_abi_dark_buster { get { return (__0x3F >> 6) & 1; } }
    public int ply_abi_triple_foul { get { return (__0x3F >> 7) & 1; } }
    [FieldOffset(0x40)] public byte __0x40;
    public int ply_abi_power_break { get { return (__0x40) & 1; } }
    public int ply_abi_magic_break { get { return (__0x40 >> 1) & 1; } }
    public int ply_abi_armor_break { get { return (__0x40 >> 2) & 1; } }
    public int ply_abi_mental_break { get { return (__0x40 >> 3) & 1; } }
    public int ply_abi_mug { get { return (__0x40 >> 4) & 1; } }
    public int ply_abi_quick_hit { get { return (__0x40 >> 5) & 1; } }
    public int ply_abi_steal { get { return (__0x40 >> 6) & 1; } }
    public int ply_abi_use { get { return (__0x40 >> 7) & 1; } }
    [FieldOffset(0x41)] public byte __0x41;
    public int ply_abi_flee { get { return (__0x41) & 1; } }
    public int ply_abi_pray { get { return (__0x41 >> 1) & 1; } }
    public int ply_abi_cheer { get { return (__0x41 >> 2) & 1; } }
    public int ply_abi_aim { get { return (__0x41 >> 3) & 1; } }
    public int ply_abi_focus { get { return (__0x41 >> 4) & 1; } }
    public int ply_abi_reflex { get { return (__0x41 >> 5) & 1; } }
    public int ply_abi_luck { get { return (__0x41 >> 6) & 1; } }
    public int ply_abi_jinx { get { return (__0x41 >> 7) & 1; } }
    [FieldOffset(0x42)] public byte __0x42;
    public int ply_abi_lancet { get { return (__0x42) & 1; } }
    public int ply_abi_unused { get { return (__0x42 >> 1) & 1; } }
    public int ply_abi_guard { get { return (__0x42 >> 2) & 1; } }
    public int ply_abi_sentinel { get { return (__0x42 >> 3) & 1; } }
    public int ply_abi_sparechange { get { return (__0x42 >> 4) & 1; } }
    public int ply_abi_threaten { get { return (__0x42 >> 5) & 1; } }
    public int ply_abi_provoke { get { return (__0x42 >> 6) & 1; } }
    public int ply_abi_entrust { get { return (__0x42 >> 7) & 1; } }
    [FieldOffset(0x43)] public byte __0x43;
    public int ply_abi_copycat { get { return (__0x43) & 1; } }
    public int ply_abi_doublecast { get { return (__0x43 >> 1) & 1; } }
    public int ply_abi_bribe { get { return (__0x43 >> 2) & 1; } }
    public int ply_abi_cure { get { return (__0x43 >> 3) & 1; } }
    public int ply_abi_cura { get { return (__0x43 >> 4) & 1; } }
    public int ply_abi_curaga { get { return (__0x43 >> 5) & 1; } }
    public int ply_abi_nulfrost { get { return (__0x43 >> 6) & 1; } }
    public int ply_abi_nulblaze { get { return (__0x43 >> 7) & 1; } }
    [FieldOffset(0x44)] public byte __0x44;
    public int ply_abi_nulshock { get { return (__0x44) & 1; } }
    public int ply_abi_nultide { get { return (__0x44 >> 1) & 1; } }
    public int ply_abi_scan { get { return (__0x44 >> 2) & 1; } }
    public int ply_abi_esuna { get { return (__0x44 >> 3) & 1; } }
    public int ply_abi_life { get { return (__0x44 >> 4) & 1; } }
    public int ply_abi_fulllife { get { return (__0x44 >> 5) & 1; } }
    public int ply_abi_haste { get { return (__0x44 >> 6) & 1; } }
    public int ply_abi_hastega { get { return (__0x44 >> 7) & 1; } }
    [FieldOffset(0x45)] public byte __0x45;
    public int ply_abi_slow { get { return (__0x45) & 1; } }
    public int ply_abi_slowga { get { return (__0x45 >> 1) & 1; } }
    public int ply_abi_shell { get { return (__0x45 >> 2) & 1; } }
    public int ply_abi_protect { get { return (__0x45 >> 3) & 1; } }
    public int ply_abi_reflect { get { return (__0x45 >> 4) & 1; } }
    public int ply_abi_dispel { get { return (__0x45 >> 5) & 1; } }
    public int ply_abi_regen { get { return (__0x45 >> 6) & 1; } }
    public int ply_abi_holy { get { return (__0x45 >> 7) & 1; } }
    [FieldOffset(0x46)] public byte __0x46;
    public int ply_abi_autolife { get { return (__0x46) & 1; } }
    public int ply_abi_blizzard { get { return (__0x46 >> 1) & 1; } }
    public int ply_abi_fire { get { return (__0x46 >> 2) & 1; } }
    public int ply_abi_thunder { get { return (__0x46 >> 3) & 1; } }
    public int ply_abi_water { get { return (__0x46 >> 4) & 1; } }
    public int ply_abi_fira { get { return (__0x46 >> 5) & 1; } }
    public int ply_abi_blizzara { get { return (__0x46 >> 6) & 1; } }
    public int ply_abi_thundara { get { return (__0x46 >> 7) & 1; } }
    [FieldOffset(0x47)] public byte __0x47;
    public int ply_abi_watera { get { return (__0x47) & 1; } }
    public int ply_abi_firaga { get { return (__0x47 >> 1) & 1; } }
    public int ply_abi_blizzaga { get { return (__0x47 >> 2) & 1; } }
    public int ply_abi_thundaga { get { return (__0x47 >> 3) & 1; } }
    public int ply_abi_waterga { get { return (__0x47 >> 4) & 1; } }
    public int ply_abi_bio { get { return (__0x47 >> 5) & 1; } }
    public int ply_abi_demi { get { return (__0x47 >> 6) & 1; } }
    public int ply_abi_death { get { return (__0x47 >> 7) & 1; } }
    [FieldOffset(0x48)] public byte __0x48;
    public int ply_abi_drain { get { return (__0x48) & 1; } }
    public int ply_abi_osmose { get { return (__0x48 >> 1) & 1; } }
    public int ply_abi_flare { get { return (__0x48 >> 2) & 1; } }
    public int ply_abi_ultima { get { return (__0x48 >> 3) & 1; } }
    public int ply_abi_shield { get { return (__0x48 >> 4) & 1; } }
    public int ply_abi_boost { get { return (__0x48 >> 5) & 1; } }
    public int ply_abi_dismiss { get { return (__0x48 >> 6) & 1; } }
    public int ply_abi_dismiss_youjinbo { get { return (__0x48 >> 7) & 1; } }
    [FieldOffset(0x49)] public byte __0x49;
    public int ply_abi_pilfer_gil { get { return (__0x49) & 1; } }
    public int ply_abi_full_break { get { return (__0x49 >> 1) & 1; } }
    public int ply_abi_extract_power { get { return (__0x49 >> 2) & 1; } }
    public int ply_abi_extract_mana { get { return (__0x49 >> 3) & 1; } }
    public int ply_abi_extract_speed { get { return (__0x49 >> 4) & 1; } }
    public int ply_abi_extract_ability { get { return (__0x49 >> 5) & 1; } }
    public int ply_abi_nab_gil { get { return (__0x49 >> 6) & 1; } }
    public int ply_abi_quick_pockets { get { return (__0x49 >> 7) & 1; } }
    [FieldOffset(0x4A)] public ushort __0x4A;
    [FieldOffset(0x4C)] public uint __0x4C;
    [FieldOffset(0x50)] public uint ply_encounter_count;
    [FieldOffset(0x54)] public uint ply_enemies_defeated;
    [FieldOffset(0x58)] public uint __0x58;
    [FieldOffset(0x5C)] public uint __0x5C;
    [FieldOffset(0x60)] public ushort ply_ovr_mode_warrior_ctr;
    [FieldOffset(0x62)] public ushort ply_ovr_mode_comrade_ctr;
    [FieldOffset(0x64)] public ushort ply_ovr_mode_stoic_ctr;
    [FieldOffset(0x66)] public ushort ply_ovr_mode_healer_ctr;
    [FieldOffset(0x68)] public ushort ply_ovr_mode_tactician_ctr;
    [FieldOffset(0x6A)] public ushort ply_ovr_mode_victim_ctr;
    [FieldOffset(0x6C)] public ushort ply_ovr_mode_dancer_ctr;
    [FieldOffset(0x6E)] public ushort ply_ovr_mode_avenger_ctr;
    [FieldOffset(0x70)] public ushort ply_ovr_mode_slayer_ctr;
    [FieldOffset(0x72)] public ushort ply_ovr_mode_hero_ctr;
    [FieldOffset(0x74)] public ushort ply_ovr_mode_rook_ctr;
    [FieldOffset(0x76)] public ushort ply_ovr_mode_victor_ctr;
    [FieldOffset(0x78)] public ushort ply_ovr_mode_coward_ctr;
    [FieldOffset(0x7A)] public ushort ply_ovr_mode_ally_ctr;
    [FieldOffset(0x7C)] public ushort ply_ovr_mode_sufferer_ctr;
    [FieldOffset(0x7E)] public ushort ply_ovr_mode_daredevil_ctr;
    [FieldOffset(0x80)] public ushort ply_ovr_mode_loner_ctr;
    [FieldOffset(0x82)] public ushort ply_ovr_mode_unuse_1_ctr;
    [FieldOffset(0x84)] public ushort ply_ovr_mode_unuse_2_ctr;
    [FieldOffset(0x86)] public ushort ply_ovr_mode_aeon_ctr;
    [FieldOffset(0x88)] public byte __0x88;
    public int ply_ovr_mode_warrior { get { return (__0x88) & 1; } }
    public int ply_ovr_mode_comrade { get { return (__0x88 >> 1) & 1; } }
    public int ply_ovr_mode_stoic { get { return (__0x88 >> 2) & 1; } }
    public int ply_ovr_mode_healer { get { return (__0x88 >> 3) & 1; } }
    public int ply_ovr_mode_tactician { get { return (__0x88 >> 4) & 1; } }
    public int ply_ovr_mode_victim { get { return (__0x88 >> 5) & 1; } }
    public int ply_ovr_mode_dancer { get { return (__0x88 >> 6) & 1; } }
    public int ply_ovr_mode_avenger { get { return (__0x88 >> 7) & 1; } }
    [FieldOffset(0x89)] public byte __0x89;
    public int ply_ovr_mode_slayer { get { return (__0x89) & 1; } }
    public int ply_ovr_mode_hero { get { return (__0x89 >> 1) & 1; } }
    public int ply_ovr_mode_rook { get { return (__0x89 >> 2) & 1; } }
    public int ply_ovr_mode_victor { get { return (__0x89 >> 3) & 1; } }
    public int ply_ovr_mode_coward { get { return (__0x89 >> 4) & 1; } }
    public int ply_ovr_mode_ally { get { return (__0x89 >> 5) & 1; } }
    public int ply_ovr_mode_sufferer { get { return (__0x89 >> 6) & 1; } }
    public int ply_ovr_mode_daredevil { get { return (__0x89 >> 7) & 1; } }
    [FieldOffset(0x8A)] public byte __0x8A;
    public int ply_ovr_mode_loner { get { return (__0x8A) & 1; } }
    public int ply_ovr_mode_unuse_1 { get { return (__0x8A >> 1) & 1; } }
    public int ply_ovr_mode_unuse_2 { get { return (__0x8A >> 2) & 1; } }
    public int ply_ovr_mode_aeons { get { return (__0x8A >> 3) & 1; } }
    [FieldOffset(0x8C)] public uint __0x8C;
    [FieldOffset(0x90)] public uint __0x90;
}

